一、项目描述
    1、项目名称：音乐上传网站
    2、功能：将本地的音乐通过代码方式，从本地地址上传到另外一个地址
    3、知识点：IO流文件的读写和传输、Socket编程的使用、线程控制
二、项目实现
    1、登录模块
        用户登录网站，使用对象流对数据进行封装
    2、上传模块
        使用IO流+Socket网络编程+线程完成上传
三、项目的构思
    1、实现主菜单
        登录界面主菜单及主菜单的登录选项（1、登录；2、上传音乐；）
    2、实现登录选项
        a.首先输入账号和密码进行登录，封装的 MusicUtils 工具类对账号和密码的长度进行限制。
        b.客户端接受到登录信息，会对其进行验证。登录成功，即可进行下一步操作；登录失败则重新进行登录。
    3、实现上传音乐
        a.首先判断登录状态，成功登录状态下才能上传音乐。
        b.登录状态下，用IO流对和Socket对绝对路径下的文件进行获取，
          筛选符合要求的文件并存入Map集合中（歌曲编号作为Key，歌曲信息作为Value），打印在控制台。
        c.将需要上传的音乐传至服务器，再从服务器传入指定路径（当指定路径不存在时，就创建一个路径）。
        d.服务器反馈上传结果
四、项目存在的问题
    1、关闭资源时，如果直接关闭输入或者输出流，会导致socket关闭。
       解决：a.在客户端或者服务端通过socket.shutdownOutput()单向关闭，
               即关闭客户端的输出流并不会关闭服务端的输出流，所以是一种单方向的关闭流；
             b.通过socket.shutdownOutput()关闭输出流，但socket仍然是连接状态，连接并未关闭。
             c.如果直接关闭输入或者输出流，即：in.close()或者out.close()，会直接关闭socket。
    2、文件过滤器
        File类的两种过滤器接口：
            FilenameFilter：需要实现的方法boolean accept(File dir, String name);
            FileFilter：需要实现的方法boolean accept(File pathname);
        过滤器的使用方法：首先创建过滤器实例，然后在File类的list()和listFiles()中使用过滤器实例作为参数。
        如在某个目录下过滤出后缀为".exe"的文件。
            第一种方法：File[]  listFiles(FileFilter filter);
            第二种方法：String[]  list(FilenameFilter filter);
        list()返回的是一个String类型数组，它只是一个数组，仅仅只是一个文件；
        而listFiles()方法返回的是一个File类的引用，它具有类的所有属性和方法。
    3、三目运算符代替if-else语句，减少代码量
    4、有待优化：
        a.当第一次登陆成功进入选择界面时，如果再次选择 1 ，就会再次进入登陆界面，需要重新登陆。
          也就是未保存第一次登陆的状态的结果，理应判断为您的状态已登录，且当客户选择 1 选项时，
          提示您已经登陆，无须再次登陆。
        b.当输入目的文件位置时，不用和示例（F:/ABCD）的一样也可以上传成功。如（F:ABCD）
        c.同一首歌曲可以再次上传，服务器端显示上传成功，但是目的文件如果有当前歌曲就不会再次被复制。
        d.当所输入的歌曲编号不在歌单列表中时，会出现异常，程序终止。Exception in thread "main" java.lang.NullPointerException